#include "uefi/uefi.h"
#include "graphics/graphics.h"
#include "graphics/buffer.h"
#include "graphics/font.h"

#define SSFN_IMPLEMENTATION     /* get the normal renderer implementation */
#define SSFN_MAXLINES 4096      /* configure for static memory management */

ssfn_buf_t dst = {0};           /* framebuffer properties */
ssfn_t ctx = {0};

int main (int argc, char **argv)
{
  FILE *f;
    ssfn_font_t *font;
    long int size;

  if((f = fopen("font.sfn", "r"))) {
        fseek(f, 0, SEEK_END);
        size = ftell(f);
        fseek(f, 0, SEEK_SET);
        font = (ssfn_font_t*)malloc(size + 1);
        if(!font) {
            fprintf(stderr, "unable to allocate memory\n");
            return 1;
        }
        fread(font, size, 1, f);
        fclose(f);
        printf("pre-ld\n");
        ssfn_load(&ctx, font);
    } else {
        fprintf(stderr, "Unable to load font\n");
        return 0;
    }
            printf("post-ld\n");



  int x = 0, y = 0;
  efi_gop_t* gop = get_gop_ptr();
  if (gop == NULL) { printf("Error getting GOP"); exit(1); };
  set_graphics_mode(gop);


  // akr_screenbuffer_t* buffer = akr_screenbuffer_create(gop, &ctx, &dst);
  // printf("wooo1!\n");
  // Set up font for rendering
  //ssfn_font_t* font = akr_font_load("font.sfn", &ctx);
  //ssfn_select(buffer->ssfn_ctx, SSFN_FAMILY_ANY, NULL, SSFN_STYLE_REGULAR | SSFN_STYLE_NOCACHE, 40);

  printf("wooo10!\n");

  int t = 0;
  // while (1)
  // {
  //   t++;
  //   if (t >= 512)
  //   {
  //     t = 0;
  //   }
  //   for (int x = 0; x < buffer->width; x++)
  //   {
  //     for (int y = 0; y < buffer->height; y++)
  //     {
  //       uint64_t offset = x + (y*buffer->width);
  //       float fx = (float)x;
  //       float fy = (float)y;
  //       char r = (fx / (float)buffer->width) * 200;
  //       char g = (fy / (float)buffer->height) * 200;
  //       char b = t > 255 ? 255 - t : t;
  //       buffer->data[offset] = ((r & 0xff) << 16) | ((g & 0xff) << 8) | ((b & 0xff) << 0);
  //     }
  //   }
  //   akr_screenbuffer_activate(buffer);
  //   usleep(10);
  // }



  //for (int i = 0; i < 16; i++)
  //{
  //  printf("fuck you nvidia!\n");
  //}

  //display_png("image.png", gop);
  sleep(-1);

  return 0;
}
